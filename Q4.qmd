---
title: "Q4"
author: "Arindom Baruah (32779267)"
execute: 
  echo: true
  message: false
  warning: false
format: html
number-sections: true
theme: journal
---



```{r}
#| echo: false
library(nycflights13)
library(tidyverse)
library(ggplot2)

```



# Relation between arrival and departure delay


<div class="alert alert-block alert-success">
✈️ 

The arrival and departure delays of flights maybe related based on certain factors as explained below:

1. <b> Weather </b>: Severe weather often introduces unsafe conditions for flight operations to take place. Under such conditions, higher values of departure and arrival delays maybe expected.

2. <b> Flight carrier </b>: Based on their "on-time" performance records, certain carriers may record higher delays in their operations, leading to higher values of arrival and departure delays.

3. <b> Airport </b>: Certain large airports may observe higher traffic congestion. This inevitably leads to higher values of arrival and departure delays.

In conclusion, based on preliminary assessment of the data, the flight arrival and departure delays may often be <b> strongly related to each other linearly </b> due to a multitude of varying factors as explained above. 


✈️ </div>


# Units of delays

<div class="alert alert-block alert-warning">
📈💡

Based on the [documentation](https://cran.r-project.org/web/packages/nycflights13/nycflights13.pdf) of "nycflights13" package on R, the departure and arrival delays are reported in __minutes__.

</div>

# Scatterplot between arrival and departure delays

```{r}
#| label: fig-deparr
#| fig-cap: "Relationship between arrival and departure delays"

pl1 <-
  ggplot(data = flights %>% drop_na(), aes(x =  dep_delay, y = arr_delay)) + 
  geom_point() + geom_smooth(method='lm') + theme(aspect.ratio = 1) + 
  labs(x = "Departure delay (in mins)", y= "Arrival delay (in mins)") + theme_classic() +
   annotate(
    "segment",
    x = 0,
    y = 500,
    xend = 50  ,
    yend = 200,
    color = 'red',
    arrow = arrow(type = "closed",
                  length = unit(0.02, "npc"))
  ) +
  annotate(
    "text",
    x = 10,
    y = 520,
    colour = "red",
    label = 'Weak linear correlation',
    size = unit(2.5, "pt")
  ) +
   annotate(
    "segment",
    x = 850,
    y = 700,
    xend = 870  ,
    yend = 850,
    color = 'blue',
    arrow = arrow(type = "closed",
                  length = unit(0.02, "npc"))
  ) +
  annotate(
    "text",
    x = 840,
    y = 670,
    colour = "blue",
    label = 'Strong linear correlation',
    size = unit(2.5, "pt")
  )
pl1
```
@fig-deparr visualises the departure and arrival delays through a scatter plot.

<div class="alert alert-block alert-warning">
📈💡

We have plotted the variable dep_delay (Departure delay) on the horizontal X-axis as it __aids the intuition of the plot__. In general, departure delays often mark the start of a flight delay. A high departure delay could inevitably lead to a high arrival delay of the flight. As a result, we have considered __the departure delay as the independent variable while observing arrival delay as the dependent variable.__ Such analysis is often better observed by placing the independent variable on the X-axis and analysing whether a strong relation can be observed on the Y-axis for the corresponding values of the X-axis.

📈💡  </div>



# Relationship between arrival delay and departure delay based on the scatter plot {#sec-rel}

Based on the plot illustrated through @fig-deparr, we can make the following observation:

<div class="alert alert-block alert-warning">
✈️

We can make the following important observations with respect to the relation between departure and arrival delays:

1. There appears to be a <b> linear relationship </b> between the departure and arrival delays.
2. However, we can also observe that for delays of less than 400 minutes, the <b> linear correlation is weak </b> as many observations scatter away from the linear prediction.
3. On the other hand, for departure and arrival delays above 400 minutes, there appears to be a <b> strong linear correlation </b>. 

✈️ </div>


# Consistency of pattern {#sec-pattern}

<div class="alert alert-block alert-success">
📈💡

Upon observing the scatter plot in @fig-deparr, we could observe that the departure and the arrival delays are linearly related to each other. However, we could also observe that the patterns are not consistent throughout all the values of departure delays. The linear relation between the departure and arrival delays __were observed to be weak for delays with less than 400 minutes__ but was observed to be much stronger for delays greater than 400 minutes. This is an additional insight which could be deduced through the scatterplot.

Hence, eventhough the variables of departure and arrival delay are observed to be linearly correlated, however, __departure delays until a certain threshold (upto approximately 400 mins) are observed to be relatively weakly correlated to arrival delays when compared to delays above the threshold__.

📈💡
</div>


# Flights with departure delays of over 8 hours {#sec-del}

```{r}
threshold <- 8*60 # Converting hours to minutes
flt_delay <- flights %>% filter(dep_delay > threshold) %>% nrow()

# Flights with departure delays of greater than 8 hours
```

<div class="alert alert-block alert-warning">
There are a total of __`r flt_delay`__ number of flights which were observed to report departure delays of greater than 8 hours.
</div>

# Flights with departure delays of over 8 hours and arrival delays less than 8 hours {#sec-arrdel}

```{r}
delay_num <- flights %>% 
  filter(dep_delay > threshold) %>% 
  filter(arr_delay < dep_delay) %>% nrow()

# Flights with departure delays greater than 8 hours and arrival delays less than departure delays
```

<div class="alert alert-block alert-success">
📈💡

For the `r flt_delay` flights reporting departure delays of greater than 8 hours, __`r delay_num`__ reported arrival delays less than their corresponding departure delays. 

📈💡
</div>

# Does the above analysis mean that it is typical for flights that are delayed on departure to catch up time during the flight ?

<div class="alert alert-block alert-success">
📈✈️⚠️

Based on the analysis in @sec-rel,@sec-pattern and @sec-del, we have observed that there is a __strong evidence__ to suggest that flights with departure delays greater than 8 hours catch up time during the flight to arrive with lower corresponding arrival delays. For flights with __high departure delays, there is a strong linear relationship which suggests that they will be equally delayed or just less than their corresponding departure delay on arrival__. For flights with __shorter departure delay times, there is a relatively weaker linear relationship with higher on-arrival delay times expected.__

📈✈️⚠️
</div>

# Resources

The above analysis was undertaken with the help of the following software and packages:

1. __RStudio__: Integrated Development for R. RStudio, PBC, Boston, MA URL http://www.rstudio.com/.
2. __ggplot2__: H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016.
3. __tidyverse__: Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K,
  Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). “Welcome to the tidyverse.” _Journal of Open Source Software_,
  *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
4. __knitr__: Yihui Xie (2014) knitr: A Comprehensive Tool for Reproducible Research in R. In Victoria Stodden, Friedrich Leisch and Roger D. Peng, editors, Implementing
  Reproducible Computational Research. Chapman and Hall/CRC. ISBN 978-1466561595.
5. __rmarkdown__: Allaire J, Xie Y, Dervieux C, McPherson J, Luraschi J, Ushey K, Atkins A, Wickham H, Cheng J, Chang W, Iannone R (2023). _rmarkdown: Dynamic Documents for R_.
  R package version 2.23, <https://github.com/rstudio/rmarkdown>.
6. __kableExtra__: Zhu H (2023). _kableExtra: Construct Complex Table with 'kable' and Pipe Syntax_. http://haozhu233.github.io/kableExtra
7. __visdat__: Tierney N (2017). “visdat: Visualising Whole Data Frames.” _JOSS_, *2*(16), 355. doi:10.21105/joss.00355 <https://doi.org/10.21105/joss.00355>,
  <http://dx.doi.org/10.21105/joss.00355>.
