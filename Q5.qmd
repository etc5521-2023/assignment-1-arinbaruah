---
title: "Q5"
author: "Arindom Baruah (32779267)"
execute: 
  echo: true
  message: false
  warning: false
format: html
number-sections: true
theme: journal
---


```{r}
#| echo: false
#| message: false
#| fig-width: 10
#| fig-height: 5
library(palmerpenguins)
library(colorspace)
library(patchwork)
library(tidyr)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(nullabor)
library(broom)
```


# Data pre-processing

Let us check how the initial dataset looks like. @tbl-peng gives us a short glimpse of the dataset.

```{r}
#| label: tbl-peng
#| tbl-cap: "Penguin dataset from the Palmerpenguins package"
head(penguins) %>% kable %>% 
  kable_styling(bootstrap_options = c("bordered","hover"))
```

For further analysis, we will retain only the following variables and rename them as follows:

1. Species
2. Bill_length (Renamed as bl)
3. Bill_depth (Renamed as bd)
4. Flipper_length (Renamed as fl)
5. Body_mass_g (Renamed as bm)

We will additionally remove any missing values in the dataset.

```{r}

vars <- c("species","bill_length_mm",
          "bill_depth_mm","flipper_length_mm",
          "body_mass_g")
penguins_subset <- penguins %>% drop_na() %>% select(vars)
penguins_subset <- penguins_subset %>% rename("bl" = "bill_length_mm",
                                              "bd" = "bill_depth_mm",
                                              "fl" = "flipper_length_mm",
                                              "bm" = "body_mass_g")
```

The new pre-processed dataset is illustrated through @tbl-pengsub

```{r}
#| label: tbl-pengsub
#| tbl-cap: "Pre-processed dataset"

head(penguins_subset) %>% kable %>% 
  kable_styling(bootstrap_options = c("bordered","hover"))

```


# Plot visualisation of bm,fl and bl

```{r}
#| label: fig-charts
#| fig-cap: "Body mass Vs Flipper length Vs Bill length"
#| fig-subcap: 
#|   - "General plot for bm and fl"
#|   - "Variation across species"
#| layout-ncol: 2
pl1 <- ggplot(data = penguins_subset,aes(x = bm,y = fl)) + 
  geom_point() + labs(x = "Body mass (bm)",y = "Flipper length (fl)") + theme_classic() + theme(aspect.ratio=1)

pl2 <- ggplot(data = penguins_subset,aes(x = bm,y = bl)) + 
  geom_point(aes(color = species)) + labs(x = "Body mass (bm)",y = "Bill length (bl)",color = "Species") + 
  theme_classic() + scale_color_discrete_divergingx(palette="Zissou 1") 
pl1
pl2
```

The plots illustrated by @fig-charts show the relation between fl and bm across different species.

# Lineup of 20 plots 

## Plot A

Let us create the null plots for plot (a) in @fig-charts by permuting the residuals of the linear relationship between the var as shown by the code chunks below.

```{r}
#| label: fig-nulla
#| fig-cap: "Null plots for residuals of bm vs fl linear relationship"
set.seed(201349)
lmodel <- lm(formula = bm~fl,data =  penguins_subset)
ggplot(lineup(null_lm(bm~fl, method="rotate"),
              augment(lmodel)),
       aes(x=fl, y=.resid)) +
  geom_point() + geom_smooth(method = lm,color = 'blue',se=FALSE) +
  facet_wrap(~.sample, ncol=5) +
  theme_void() +
  theme(axis.text = element_blank(), 
        panel.border = element_rect(fill=NA, colour="black"))
```

@fig-nulla illustrates the null plots for data points of residuals __generated by randomising the residuals.__.

<div class="alert alert-block alert-warning">
üí°

The null hypothesis and the alternative hypothesis are as follows:

$H_o$ = The variables body mass (bm) and flipper length (fl) have __a weak linear relationship__. \
$H_1$ = Body mass (bm) and flipper length(fl) do not have a weak linearly relationship to each other.

Method : Randomising the residuals using the null_lm function.
üí°
</div>


## Plot B

Let us now create the null plots for the same variables fl and bm but add in a level of colors for different species as illustrated by @fig-nullb. We are going to __randomly permute the species of the penguins__ to test whether the variables of fl and bm have any correlation with species.

```{r}
#| label: fig-nullb
#| fig-cap: "Null plots for bm vs bl colored by different species"

set.seed(201344)
ggplot(lineup(null_permute("species"), penguins_subset, n=20),
       aes(x=bm, y=bl, colour=species)) +
  geom_point(alpha=0.7) +
  facet_wrap(~.sample, ncol=5) +
  colorspace::scale_color_discrete_divergingx(palette="Temps") +
  theme_bw() +
  theme(
    legend.position="none",
    axis.title = element_blank(),
    axis.text = element_blank()
  )
```


<div class="alert alert-block alert-warning">
üí°

The null hypothesis and the alternative hypothesis are as follows:

$H_o$ = The variables body mass (bm) and flipper length (fl) have __no association with the type of penguin species__. \
$H_1$ = Body mass (bm) and flipper length(fl) are related are dependent upon the particular type of species.

Method : Permutation of the "species" variable using the null_permute function.
üí°
</div>


# P-value calculation 

## Plot A

Based on the reports of 8 cases, following observations were recorded:

A total of 2 out of the 8 observations chose plot 18 as the most unique plot which is the actual plot.

Some of the reasons outlined for those who chose plot 18 are follows:

- Less noise in the data.
- Looks like a linear relationship.
- Better homoscedacity.

6 subjects however chose the remaining plots as there was no clear distinctive pattern in the scatterplot of the residuals.


Based on the above statistics, the P-value maybe calculated through the code-chunk below.


```{r pcalca}

p_val <- sum(dbinom(2:8,8,1/20))

```


<div class="alert alert-block alert-warning">
üí°

Based on the statistics observed by the reports of the 8 test subjects, the P-value of 2 or more people choosing plot 18 as the most unique plot in the line up is __`r p_val`__. Such a value of score indicates that there is __not enough evidence to reject the null hypothesis__ in favor of the alternate hypothesis __which states that the variables of body mass (bm) and flipper length (fl) are weakly related to each other in a linear fashion__.
üí°
</div>


## Plot B

Based on the reports of 8 cases, following observations were recorded:

All of the 8 observations recorded that they observed plot 10 to be the most unique plot in the lineup.

Some of the reasons outlined for those who chose plot 10 are as follows:

- Less dispersion in the residuals.
- Even distribution across the blue ideal line.
- A definitive pattern in the colors observed.
- Concentration of red color observed at the top end.




```{r pcalcb}

p_val <- sum(dbinom(8:8,8,1/20))

```


<div class="alert alert-block alert-warning">
üí°

Based on the statistics observed by the reports of the 8 test subjects, the P-value of 8 choosing plot 10 as the most unique plot in the line up is __`r p_val`__. Such a low score indicates that there is overwhelming evidence to reject the null hypothesis in favor of the alternate hypothesis __which states that the variables of body mass (bm) and flipper length (fl) are indeed related to the type of penguin species__.
üí°
</div>

# Resources

The above analysis was undertaken with the help of the following software and packages:

1. __RStudio__: Integrated Development for R. RStudio, PBC, Boston, MA URL http://www.rstudio.com/.
2. __ggplot2__: H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016.
3. __tidyverse__: Wickham H, Averick M, Bryan J, Chang W, McGowan LD, Fran√ßois R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, M√ºller K,
  Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). ‚ÄúWelcome to the tidyverse.‚Äù _Journal of Open Source Software_,
  *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
4. __knitr__: Yihui Xie (2014) knitr: A Comprehensive Tool for Reproducible Research in R. In Victoria Stodden, Friedrich Leisch and Roger D. Peng, editors, Implementing
  Reproducible Computational Research. Chapman and Hall/CRC. ISBN 978-1466561595.
5. __rmarkdown__: Allaire J, Xie Y, Dervieux C, McPherson J, Luraschi J, Ushey K, Atkins A, Wickham H, Cheng J, Chang W, Iannone R (2023). _rmarkdown: Dynamic Documents for R_.
  R package version 2.23, <https://github.com/rstudio/rmarkdown>.
6. __kableExtra__: Zhu H (2023). _kableExtra: Construct Complex Table with 'kable' and Pipe Syntax_. http://haozhu233.github.io/kableExtra
7. __visdat__: Tierney N (2017). ‚Äúvisdat: Visualising Whole Data Frames.‚Äù _JOSS_, *2*(16), 355. doi:10.21105/joss.00355 <https://doi.org/10.21105/joss.00355>,
  <http://dx.doi.org/10.21105/joss.00355>.
